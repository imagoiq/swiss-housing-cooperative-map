name: Data collection update

env:
  root_dir: '../../'
  output_dir: '../../output'
  templates_dir: './templates'
  tmp_dir: '/tmp'
  cache_dir: '../../.cache'
  overpass_server: 'http://overpass.osm.ch'
  cooperative_buildings_filename: 'swiss_housing_cooperative_buildings.geojson'
  cooperative_areas_filename: 'swiss_housing_cooperative_areas.geojson'

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Push of this file
  push:
    paths:
      - .github/workflows/**
      - '!.github/workflows/cache/**'
  # Every week, at 20:00 on Sunday
  schedule:
    - cron: '0 4 * * 0'

jobs:
  build:
    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: .github/workflows

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install node
        run: |
          sudo apt install nodejs
          npm install -g n
          sudo n lts

      - name: Install dependencies
        run: |
          npm install -g osmtogeojson
          npm install -g d3-dsv
          (cd ./scripts; npm link d3-dsv)

      - name: Install optional dependencies
        run: |
          npm install -g ejs
          sudo apt-get install pandoc
          pip install --user pandoc-include

      - name: Download buildings overpass data
        run: curl -sSd "$(<./query/overpass_query_buildings)" -X POST $overpass_server/api/interpreter > "$output_dir/$cooperative_buildings_filename"

      - name: Combine overpass data associated addresses node with ways
        run: node ./scripts/combine_addresses.mjs "$output_dir/$cooperative_buildings_filename"

      - name: Convert to geojson
        run: osmtogeojson "$output_dir/$cooperative_buildings_filename" "$output_dir/$cooperative_buildings_filename"

      - name: Enhance osm data by parsing dates
        run: node ./scripts/parse_dates.mjs "$output_dir/$cooperative_buildings_filename"

      - name: Enhance overpass data with wikidata
        run: node ./scripts/add_wikidata.mjs "$output_dir/$cooperative_buildings_filename"

      - name: Download areas overpass data and convert to geojson
        run: curl -sSd "$(<./query/overpass_query_areas)" -X POST $overpass_server/api/interpreter | osmtogeojson > "$output_dir/$cooperative_areas_filename"

      - name: Get list of cooperative owners
        run: |
          node ./scripts/generate_list_identity.mjs "owner" $output_dir/$cooperative_buildings_filename $output_dir/swiss_housing_cooperative_list_owners.tsv
          node ./scripts/generate_list_identity.mjs "owner" $output_dir/$cooperative_buildings_filename $output_dir/swiss_housing_cooperative_list_owners.json

      - name: Get list of cooperative operators
        run: |
          node ./scripts/generate_list_identity.mjs "operator" $output_dir/$cooperative_buildings_filename $output_dir/swiss_housing_cooperative_list_operators.tsv
          node ./scripts/generate_list_identity.mjs "operator" $output_dir/$cooperative_buildings_filename $output_dir/swiss_housing_cooperative_list_operators.json

      - name: Update readme data quality section
        run: |
          query=$(base64 ./query/overpass_query_buildings)
          node ./scripts/generate_data_quality_identity.mjs "owner" $output_dir/$cooperative_buildings_filename $tmp_dir/swiss_housing_cooperative_list_owners_data_quality.json
          node ./scripts/generate_data_quality_identity.mjs "operator" $output_dir/$cooperative_buildings_filename $tmp_dir/swiss_housing_cooperative_list_operators_data_quality.json
          
          # English
          ejs ./templates/data_quality_table.ejs lang=en identity="owner" query="$query" -f $tmp_dir/swiss_housing_cooperative_list_owners_data_quality.json -o "$tmp_dir/owners_data_quality_table.html" -w
          ejs ./templates/data_quality_table.ejs lang=en identity="operator" query="$query" -f $tmp_dir/swiss_housing_cooperative_list_operators_data_quality.json -o "$tmp_dir/operators_data_quality_table.html" -w
          pandoc "$templates_dir/README.md" --filter pandoc-include -o "$root_dir/README.md" -t gfm
          
          # French
          ejs ./templates/data_quality_table.ejs lang=fr identity="owner" query="$query" -f $tmp_dir/swiss_housing_cooperative_list_owners_data_quality.json -o "$tmp_dir/owners_data_quality_table.fr.html" -w
          ejs ./templates/data_quality_table.ejs lang=fr identity="operator" query="$query" -f $tmp_dir/swiss_housing_cooperative_list_operators_data_quality.json -o "$tmp_dir/operators_data_quality_table.fr.html" -w
          pandoc "$templates_dir/README.fr.md" --filter pandoc-include -o "$root_dir/README.fr.md" -t gfm

      # Commit all changed files back to the repository
      - name: Set commit_message variable
        run: |
          if [${{ github.event_name == 'schedule'}}]; then
            echo "COMMIT_MSG=Weekly update" >> $GITHUB_ENV
          elif [${{ github.event_name == 'push'}}]; then
            echo "COMMIT_MSG=Scripts update" >> $GITHUB_ENV
          else
            echo "COMMIT_MSG=Manual workflow update" >> $GITHUB_ENV
          fi

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ env.COMMIT_MSG }}
